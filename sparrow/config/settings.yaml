default:
  #service
  # Do not use server_name as it is flask buildin
  service_name: micro_flask

  #listener
  listener_host: 0.0.0.0
  listener_port: 8888

  # flask_smorest
  OPENAPI_VERSION: 3.0.2
  OPENAPI_URL_PREFIX: /openapi
  OPENAPI_SWAGGER_UI_PATH: /swagger
  OPENAPI_SWAGGER_UI_URL: https://cdn.jsdelivr.net/npm/swagger-ui-dist@3.46.0/
  OPENAPI_REDOC_PATH: /redoc
  OPENAPI_REDOC_URL: https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js

  # i18n (Babel)
  ## Default supported languages
  LANGUAGES:
    - en
    - zh
  ## "translations" directory (relative path is related to app root dir, e.g. <app_dir>/translations)
  ## Use ";" for multiple directories.
  BABEL_TRANSLATION_DIRECTORIES: translations

  # flask
  PROPAGATE_EXCEPTIONS: false

  # wish-flask
  ## Settings for log exceptions
  log_exception:
    # TD logger for exceptions
    td_logger: td.exceptions
    # Log request body
    log_body: True
    # Log error trace
    log_trace: True
  ## Settings for logging request info
  log_request:
    body_limit: 4096
    # pattern for sanitize request body
    body_patterns:
      # For json
      - ((['\"])\w*?(?:secret|password)\w*?\2\s*:\s*(['\"])).*?(?<!\\)(?=\3)
      # For urlencoded
      - (&?\w*?(?:secret|password)\w*?=)[^&]*

  ## Settings for pubsub
  pubsub:
    # Time interval to check subscribed channels.
    check_interval: 5
    # Time to wait for response on one socket
    check_timeout: 300
    # Set enabled to False to disable all pub and sub
    enabled: True
    # Set to_sub to False to disable all sub
    to_sub: True
    # Namespace for channel name. Default to use service_name.
    # namespace:

  ## Settings for easy request
  easy_request:
    max_pool_size: 100
    max_connections_per_pool: 100

  logging:
    version: 1
    disable_existing_loggers: False
    formatters:
      wish_formatter:
        (): sparrow.log.formatter.LogFormatter
        fmt: >-
          %(color)s[%(levelname)1.1s %(asctime)s %(process)d %(thread)d
          %(request_id)s %(request_tracing_id)s %(session_sign)s %(user_id)s
          %(name)s:%(lineno)d]%(end_color)s %(message)s
        datefmt: '%Y-%m-%d %H:%M:%S,%03d'
      td_weak_formatter:
        (): sparrow.log.formatter.LogFormatter
        fmt: >-
          %(color)s[%(levelname)1.1s %(asctime)s %(process)d %(thread)d
          %(request_id)s %(request_tracing_id)s %(session_sign)s %(user_id)s
          %(name)s:%(lineno)d]%(end_color)s ... eliminate body, use stdout_handler in td logger for details.
        datefmt: '%Y-%m-%d %H:%M:%S,%03d'
    filters:
      processor_args_length_cut_converter:
        '()': sparrow.log.filters.ProcessorArgsMaxLengthFilter
        max_arg_length: 500
      request_id_filter:
        (): sparrow.log.filters.RequestIdFilter
      request_tracing_id_filter:
        (): sparrow.log.filters.RequestTracingIdFilter
      session_sign_filter:
        (): sparrow.log.filters.SessionSignFilter
      user_id_filter:
        (): sparrow.log.filters.UserIdFilter
      request_client_filter:
        (): sparrow.log.filters.RequestClientFilter
    handlers:
      stdout_handler:
        class: logging.StreamHandler
        formatter: wish_formatter
        stream: ext://sys.stdout
        filters:
          - request_id_filter
          - request_tracing_id_filter
          - session_sign_filter
          - user_id_filter
          - request_client_filter
      td_weak_std_handler:
        class: logging.StreamHandler
        formatter: td_weak_formatter
        stream: ext://sys.stdout
        filters:
          - request_id_filter
          - request_tracing_id_filter
          - session_sign_filter
          - user_id_filter
          - request_client_filter

  extensions:
    mongo:
      enabled: false
    redis:
      enabled: false
      default_setting:
        socket_timeout: 20
        socket_connect_timeout: 10
        health_check_interval: 150
    metrics:
      enabled: false
    s3:
      enabled: false
    apm:
      enabled: false
      enable_rate: 0.0
      params:
        SERVER_URL: http://elasticapm-qa.bjs.i.wish.com
        SPAN_FRAMES_MIN_DURATION: 10ms
        STACK_TRACE_LIMIT: 300
        TRANSACTION_MAX_SPANS: 500
        API_REQUEST_TIME: 15s
        CENTRAL_CONFIG: true
        TRANSACTION_SAMPLE_RATE: 1.0
        DEBUG: true
    cache_manager:
      enabled: false
      settings:
        wishpost_oauth:
          namespace: "wp_oauth:"
          local_cache_ttl: 60
          redis_cache_ttl: 60
          # please set `redis_name` if you want to cache it in redis.
    sentry:
      enabled: false
    elastic_search:
      enabled: false
      settings:
        default:
          host: es-qa.bjs.i.wish.com:80
    pg:
      enabled: false

  wishpost_oauth:
    cache_manager: wishpost_oauth

  micro:
    wishpost_oauth:
      host: http://micro.dev.bjs.i.wish.com/oauth
      basic_auth: wish:oauth



prod:
  # Disable openapi uri for prod env
  OPENAPI_URL_PREFIX:

  extensions:
    dynaconf_merge: true
    apm:
      enabled: false
      enable_rate: 0.0
      params:
        SERVER_URL: http://elasticapm.bjs.i.wish.com
        SPAN_FRAMES_MIN_DURATION: 20ms
        STACK_TRACE_LIMIT: 300
        TRANSACTION_MAX_SPANS: 500
        API_REQUEST_TIME: 15s
        CENTRAL_CONFIG: true
        TRANSACTION_SAMPLE_RATE: 0.01
        DEBUG: true

  micro:
    wishpost_oauth:
      host: https://www.wishpost.cn
      basic_auth: wish:oauth
